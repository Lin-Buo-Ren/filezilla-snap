%YAML 1.1
---
# Snapcraft Recipe for FileZilla
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * The snapcraft format
#   https://docs.snapcraft.io/the-snapcraft-format/8337
# * Snap Documentation
#   https://docs.snapcraft.io
# * Topics under the doc category in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft
name: filezilla
title: FileZilla (UNOFFICIAL)
summary: The free FTP client solution
description: |
  This is the unofficial snap of FileZillaÂ®, the free FTP solution. The FileZilla Client not only supports FTP, but also FTP over TLS (FTPS) and SFTP. It is open source software distributed free of charge under the terms of the GNU General Public License.

  This is NOT an official distribution of FileZilla, refer the issue tracker for any issues regarding the use of this snap:

      https://github.com/Lin-Buo-Ren/filezilla-snap/issues

icon: snap/gui/filezilla.svg
license: GPL-2.0+

adopt-info: filezilla
base: core18
confinement: strict
grade: devel

plugs:
  # For snaps with a graphical user interface:
  desktop:
  desktop-legacy:
  x11:
  unity7:
  wayland:

  # Storage access
  home:
  removable-media: # Non-A/C

  # Network access
  network:

  # GNOME and Gtk runtime via content sharing
  # https://forum.snapcraft.io/t/desktop-app-support-gtk/6834
  gnome-3-28-1804:
    interface: content
    target: $SNAP/gnome-platform
    default-provider: gnome-3-28-1804

  # gtk-common-themes
  gsettings:
  gtk-3-themes:
    interface: content
    target: $SNAP/share/themes
    default-provider: gtk-common-themes:gtk-3-themes
  icon-themes:
    interface: content
    target: $SNAP/share/icons
    default-provider: gtk-common-themes:icon-themes
  sound-themes:
    interface: content
    target: $SNAP/share/sounds
    default-provider: gtk-common-themes:sounds-themes

  # Inhibit power management
  screen-inhibit-control:

apps:
  filezilla:
    adapter: full
    command: bin/filezilla
    command-chain:
    - bin/desktop-launch
    - bin/filezilla-launch
    desktop: share/applications/filezilla.desktop

parts:
  # Files to patch the files in the snap
  patching:
    source: snap/local/patching
    plugin: dump
    organize:
      '*': patching/
    prime:
    - -*

  # Launcher programs to fix problems at runtime
  launchers:
    source: snap/local/launchers
    plugin: dump
    organize:
      '*': bin/
    stage:
    - -bin/README.*

  # Programs to modify the behavior of each step of the snapcraft lifecycles
  scriptlets:
    source: snap/local/scriptlets
    plugin: dump
    organize:
      '*': scriptlets/
    prime:
    - -*

  # Check out the tagged release revision if it isn't promoted to the stable channel
  # https://forum.snapcraft.io/t/selective-checkout-check-out-the-tagged-release-revision-if-it-isnt-promoted-to-the-stable-channel/10617
  selective-checkout:
    plugin: nil
    build-packages:
    - git
    - subversion
    stage-snaps:
    - selective-checkout
    prime:
    - -*

  # Remote part for support of various desktop technologies
  # Refer: https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  desktop-gnome-platform:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-depth: 1
    source-subdir: gtk

    plugin: make
    build-packages:
    - build-essential
    - libgtk-3-dev
    override-build: |
      snapcraftctl build
      mkdir -pv $SNAPCRAFT_PART_INSTALL/gnome-platform

  # Integrate custom dialogs in your snap - doc - snapcraft.io
  # https://forum.snapcraft.io/t/integrate-custom-dialogs-in-your-snap/10825
  zenity-integration:
    plugin: nil
    stage-snaps:
    - zenity-integration

  # Speed up snap build iteration during packaging development
  # https://forum.snapcraft.io/t/the-ccache-build-snap/10820
  ccache:
    plugin: nil
    stage-snaps:
    - ccache/latest/edge
    stage:
    - bin/ccache
    prime:
    - -*

  libfilezilla:
    after:
    # For speeding up build
    - ccache

    source: https://download.filezilla-project.org/libfilezilla/libfilezilla-0.15.1.tar.bz2
    source-checksum: sha512/d557f7636bfc3958b8558fab3384b0ea84caea594566d39c051f20f02dfd71213369c50df282a3f7d2dd757038bd26e9722214839dab965cb7cde9733d59883a

    plugin: autotools
    configflags:
    - CC=ccache gcc
    - CXX=ccache g++
    build-packages:
    # DISABLED: Documentation
    #- doxygen
    #- texlive-latex-base

    - g++

    # DISABLED: Unittests
    #- libcppunit-dev

    - nettle-dev
    - pkg-config

    filesets:
      #FIXME: Documentation files not appeared in installdir
      library-headers:
      - include
      library-libtool:
      - lib/*.la
      library-pkgconfig:
      - lib/pkgconfig
      library-shared:
      - lib/**.so*
      library-static:
      - lib/**.a

    prime:
    - $library-shared

  # The wxWidgets SDK Stage Snaps
  # https://forum.snapcraft.io/t/the-wxwidgets-sdk-stage-snaps/10877
  wxwidgets-sdk:
    plugin: nil
    stage-snaps:
    - wxwidgets-sdk-gtk3
    stage-packages:
    # Crash dialog support
    - binutils
    filesets:
      crash-dialog-support:
      - usr/bin/*addr2line
      library-shared:
      - '**/lib/**/*.so*'
    prime:
    - $crash-dialog-support
    - $library-shared

  filezilla:
    after:
    # For patch-desktop-entries.*
    - patching

    # For speeding up build
    - ccache

    - libfilezilla
    - scriptlets
    - selective-checkout
    - wxwidgets-sdk

    # The actually pulling occurs in filezilla-pull
    source: https://svn.filezilla-project.org/svn/FileZilla3/trunk
    source-type: svn
    override-pull: "${SNAPCRAFT_STAGE}/scriptlets/filezilla-pull"
    plugin: autotools
    configflags:
    # Speed up one-time build
    - --disable-dependency-tracking

    # Conflict with ccache
    - --disable-precomp

    # No use for snap(we still allow manual update check though)
    - --disable-autoupdatecheck

    - CC=ccache gcc
    - CXX=ccache g++

    build-packages:
    - gettext

    # filezilla-pull scriptlet dependencies
    - curl
    - git
    - html-xml-utils
    - subversion
    - jq
    - wget

    - libgnutls28-dev
    - libpugixml-dev
    - libsqlite3-dev
    #- libwxgtk3.0-gtk3-dev
    - pkg-config

    # Required by configure program for some reason
    - xdg-utils

    stage-packages:
    - libnotify4
    - libpugixml1v5
    - libsm6
    #- libwxgtk3.0-gtk3-0v5
    - libxxf86vm1

    filesets:
      executables:
      - bin
      docs-manpages:
      - share/man
      share-appdata:
      - share/appdata
      share-desktop-entries:
      - share/applications
      share-filezilla:
      - share/filezilla
      share-icons:
      - share/icons
      share-pixmaps:
      - share/pixmaps
      localization:
      - share/locale

    override-prime: |
      set \
        -o nounset

      snapcraftctl prime
      "${SNAPCRAFT_STAGE}"/patching/patch-desktop-entries.bash
